We considered the backend and frontend stacks separately for our webapp. 

For the backend, we were deciding between Javascript/JSnode and Python/Flask. We ultimately decided on Python/Flask because everybody in the team is already familiar with and very proficient with Python. Furthermore, Flask is very lightweight, which is very important for our team, performance-wise. The reason we considered Javascript/JSNode is because being able to use Javascript for the fullstack would be convenient, but as previously mentioned, there would be a learning curve. We also considered that the JS community is much larger than the Flask community, but after some investigation, we discovered that there are still enough Flask resources around to support us as we develop the application. 

Once we decided on the backend, we had the frontend to contend with. We were torn between using Angular or React as our frontend framework. Although Angular would give us a better defined framework, we ultimately decided on React because it is much more lightweight, since it is a series of libraries rather than an entire framework. It also performs better with data that is being constantly updated, which is crucial for the project that we are building out.
